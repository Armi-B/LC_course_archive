/* Generated by Yosys 0.7 (git sha1 61f6811, i686-w64-mingw32.static-gcc 4.9.3 -Os) */

(* top =  1  *)
(* src = "MSSD.v:3" *)
module MSSD(reset, serIn, clk, p0, p1, p2, p3, error, outvalid, d);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  (* src = "MSSD.v:10" *)
  wire [3:6] S1;
  (* src = "MSSD.v:8" *)
  wire ci;
  (* src = "MSSD.v:3" *)
  input clk;
  (* src = "MSSD.v:3" *)
  output [1:0] d;
  (* src = "MSSD.v:3" *)
  output error;
  (* src = "MSSD.v:5" *)
  wire [3:0] ns;
  (* src = "MSSD.v:11" *)
  wire [3:9] ns_comb;
  (* src = "MSSD.v:13" *)
  wire [1:2] ns_comb_2;
  (* src = "MSSD.v:8" *)
  wire on;
  (* src = "MSSD.v:3" *)
  output outvalid;
  (* src = "MSSD.v:3" *)
  output p0;
  (* src = "MSSD.v:3" *)
  output p1;
  (* src = "MSSD.v:3" *)
  output p2;
  (* src = "MSSD.v:3" *)
  output p3;
  (* init = 4'b0000 *)
  (* src = "MSSD.v:6" *)
  reg [3:0] ps;
  initial ps = 4'b0000;
  (* src = "MSSD.v:12" *)
  wire [3:9] ps_comb;
  (* src = "MSSD.v:14" *)
  wire [1:2] ps_comb_2;
  (* src = "MSSD.v:3" *)
  input reset;
  (* src = "MSSD.v:3" *)
  input serIn;
  NOT _228_ (
    .A(_192_),
    .Y(_154_)
  );
  NOR _229_ (
    .A(_162_),
    .B(_152_),
    .Y(_156_)
  );
  NOT _230_ (
    .A(_156_),
    .Y(_158_)
  );
  NOT _231_ (
    .A(_105_),
    .Y(_159_)
  );
  NOR _232_ (
    .A(_159_),
    .B(_094_),
    .Y(_160_)
  );
  NOT _233_ (
    .A(_160_),
    .Y(_161_)
  );
  NOR _234_ (
    .A(_161_),
    .B(_158_),
    .Y(_163_)
  );
  NOT _235_ (
    .A(_163_),
    .Y(_164_)
  );
  NOR _236_ (
    .A(_164_),
    .B(_154_),
    .Y(_165_)
  );
  NAND _237_ (
    .A(_164_),
    .B(_204_),
    .Y(_166_)
  );
  NOT _238_ (
    .A(_166_),
    .Y(_168_)
  );
  NOR _239_ (
    .A(_168_),
    .B(_165_),
    .Y(_169_)
  );
  NOT _240_ (
    .A(_169_),
    .Y(_217_)
  );
  NOT _241_ (
    .A(_094_),
    .Y(_170_)
  );
  NOR _242_ (
    .A(_105_),
    .B(_170_),
    .Y(_171_)
  );
  NOT _243_ (
    .A(_171_),
    .Y(_172_)
  );
  NOR _244_ (
    .A(_172_),
    .B(_158_),
    .Y(_173_)
  );
  NOR _245_ (
    .A(_173_),
    .B(_134_),
    .Y(_174_)
  );
  NOT _246_ (
    .A(_173_),
    .Y(_175_)
  );
  NOR _247_ (
    .A(_175_),
    .B(_192_),
    .Y(_176_)
  );
  NOR _248_ (
    .A(_176_),
    .B(_174_),
    .Y(_143_)
  );
  NOT _249_ (
    .A(_152_),
    .Y(_178_)
  );
  NOT _250_ (
    .A(_162_),
    .Y(_179_)
  );
  NOR _251_ (
    .A(_105_),
    .B(_094_),
    .Y(_180_)
  );
  NAND _252_ (
    .A(_180_),
    .B(_179_),
    .Y(_181_)
  );
  NOR _253_ (
    .A(_181_),
    .B(_178_),
    .Y(_146_)
  );
  NOR _254_ (
    .A(_146_),
    .B(_192_),
    .Y(_147_)
  );
  NOR _255_ (
    .A(_159_),
    .B(_170_),
    .Y(_182_)
  );
  NOT _256_ (
    .A(_182_),
    .Y(_183_)
  );
  NOR _257_ (
    .A(_183_),
    .B(_158_),
    .Y(_184_)
  );
  NAND _258_ (
    .A(_184_),
    .B(_192_),
    .Y(_186_)
  );
  NOT _259_ (
    .A(_184_),
    .Y(_187_)
  );
  NOT _260_ (
    .A(_157_),
    .Y(_188_)
  );
  NOT _261_ (
    .A(_153_),
    .Y(_189_)
  );
  NOT _262_ (
    .A(_150_),
    .Y(_190_)
  );
  NAND _263_ (
    .A(_146_),
    .B(_190_),
    .Y(_191_)
  );
  NOR _264_ (
    .A(_191_),
    .B(_149_),
    .Y(_193_)
  );
  NAND _265_ (
    .A(_193_),
    .B(_189_),
    .Y(_194_)
  );
  NOR _266_ (
    .A(_194_),
    .B(_151_),
    .Y(_195_)
  );
  NAND _267_ (
    .A(_195_),
    .B(_188_),
    .Y(_197_)
  );
  NOR _268_ (
    .A(_197_),
    .B(_155_),
    .Y(_198_)
  );
  NOR _269_ (
    .A(_198_),
    .B(_148_),
    .Y(_199_)
  );
  NOT _270_ (
    .A(_148_),
    .Y(_200_)
  );
  NOT _271_ (
    .A(_155_),
    .Y(_201_)
  );
  NOT _272_ (
    .A(_151_),
    .Y(_202_)
  );
  NOT _273_ (
    .A(_149_),
    .Y(_203_)
  );
  NAND _274_ (
    .A(_159_),
    .B(_170_),
    .Y(_206_)
  );
  NOR _275_ (
    .A(_206_),
    .B(_162_),
    .Y(_207_)
  );
  NAND _276_ (
    .A(_207_),
    .B(_152_),
    .Y(_209_)
  );
  NOR _277_ (
    .A(_209_),
    .B(_150_),
    .Y(_119_)
  );
  NAND _278_ (
    .A(_119_),
    .B(_203_),
    .Y(_211_)
  );
  NOR _279_ (
    .A(_211_),
    .B(_153_),
    .Y(_212_)
  );
  NAND _280_ (
    .A(_212_),
    .B(_202_),
    .Y(_213_)
  );
  NOR _281_ (
    .A(_213_),
    .B(_157_),
    .Y(_214_)
  );
  NAND _282_ (
    .A(_214_),
    .B(_201_),
    .Y(_215_)
  );
  NOR _283_ (
    .A(_215_),
    .B(_200_),
    .Y(_216_)
  );
  NOR _284_ (
    .A(_216_),
    .B(_199_),
    .Y(_218_)
  );
  NAND _285_ (
    .A(_218_),
    .B(_187_),
    .Y(_219_)
  );
  NAND _286_ (
    .A(_219_),
    .B(_186_),
    .Y(_167_)
  );
  NOR _287_ (
    .A(_179_),
    .B(_152_),
    .Y(_220_)
  );
  NOT _288_ (
    .A(_220_),
    .Y(_221_)
  );
  NOR _289_ (
    .A(_221_),
    .B(_206_),
    .Y(_222_)
  );
  NOT _290_ (
    .A(_222_),
    .Y(_223_)
  );
  NAND _291_ (
    .A(_197_),
    .B(_155_),
    .Y(_225_)
  );
  NAND _292_ (
    .A(_225_),
    .B(_215_),
    .Y(_226_)
  );
  NAND _293_ (
    .A(_226_),
    .B(_223_),
    .Y(_227_)
  );
  NAND _294_ (
    .A(_222_),
    .B(_192_),
    .Y(_095_)
  );
  NAND _295_ (
    .A(_095_),
    .B(_227_),
    .Y(_177_)
  );
  NOR _296_ (
    .A(_221_),
    .B(_172_),
    .Y(_097_)
  );
  NAND _297_ (
    .A(_097_),
    .B(_192_),
    .Y(_098_)
  );
  NOT _298_ (
    .A(_097_),
    .Y(_099_)
  );
  NOR _299_ (
    .A(_195_),
    .B(_188_),
    .Y(_101_)
  );
  NOT _300_ (
    .A(_101_),
    .Y(_102_)
  );
  NAND _301_ (
    .A(_102_),
    .B(_197_),
    .Y(_103_)
  );
  NAND _302_ (
    .A(_103_),
    .B(_099_),
    .Y(_104_)
  );
  NAND _303_ (
    .A(_104_),
    .B(_098_),
    .Y(_185_)
  );
  NOR _304_ (
    .A(_221_),
    .B(_161_),
    .Y(_106_)
  );
  NAND _305_ (
    .A(_106_),
    .B(_192_),
    .Y(_107_)
  );
  NOT _306_ (
    .A(_106_),
    .Y(_108_)
  );
  NAND _307_ (
    .A(_194_),
    .B(_151_),
    .Y(_109_)
  );
  NAND _308_ (
    .A(_109_),
    .B(_213_),
    .Y(_110_)
  );
  NAND _309_ (
    .A(_110_),
    .B(_108_),
    .Y(_111_)
  );
  NAND _310_ (
    .A(_111_),
    .B(_107_),
    .Y(_196_)
  );
  NOR _311_ (
    .A(_209_),
    .B(_154_),
    .Y(_112_)
  );
  NAND _312_ (
    .A(_112_),
    .B(_174_),
    .Y(_113_)
  );
  NOR _313_ (
    .A(_113_),
    .B(_217_),
    .Y(_205_)
  );
  NAND _314_ (
    .A(_112_),
    .B(_143_),
    .Y(_114_)
  );
  NOR _315_ (
    .A(_114_),
    .B(_217_),
    .Y(_208_)
  );
  NOR _316_ (
    .A(_113_),
    .B(_169_),
    .Y(_210_)
  );
  NOR _317_ (
    .A(_181_),
    .B(_154_),
    .Y(_118_)
  );
  NOR _318_ (
    .A(_118_),
    .B(_152_),
    .Y(_120_)
  );
  NOT _319_ (
    .A(_120_),
    .Y(_121_)
  );
  NOR _320_ (
    .A(_121_),
    .B(_094_),
    .Y(_224_)
  );
  NAND _321_ (
    .A(_206_),
    .B(_178_),
    .Y(_123_)
  );
  NOR _322_ (
    .A(_123_),
    .B(_182_),
    .Y(_096_)
  );
  NOR _323_ (
    .A(_183_),
    .B(_179_),
    .Y(_124_)
  );
  NAND _324_ (
    .A(_183_),
    .B(_179_),
    .Y(_125_)
  );
  NAND _325_ (
    .A(_125_),
    .B(_120_),
    .Y(_126_)
  );
  NOR _326_ (
    .A(_126_),
    .B(_124_),
    .Y(_100_)
  );
  NOR _327_ (
    .A(_207_),
    .B(_178_),
    .Y(_127_)
  );
  NOT _328_ (
    .A(_124_),
    .Y(_128_)
  );
  NOR _329_ (
    .A(_128_),
    .B(_121_),
    .Y(_129_)
  );
  NOR _330_ (
    .A(_146_),
    .B(_190_),
    .Y(_130_)
  );
  NOR _331_ (
    .A(_130_),
    .B(_151_),
    .Y(_131_)
  );
  NAND _332_ (
    .A(_131_),
    .B(_191_),
    .Y(_132_)
  );
  NAND _333_ (
    .A(_189_),
    .B(_203_),
    .Y(_133_)
  );
  NOR _334_ (
    .A(_133_),
    .B(_132_),
    .Y(_135_)
  );
  NOR _335_ (
    .A(_103_),
    .B(_155_),
    .Y(_136_)
  );
  NAND _336_ (
    .A(_136_),
    .B(_135_),
    .Y(_137_)
  );
  NOR _337_ (
    .A(_137_),
    .B(_218_),
    .Y(_138_)
  );
  NOR _338_ (
    .A(_138_),
    .B(_178_),
    .Y(_139_)
  );
  NOR _339_ (
    .A(_139_),
    .B(_129_),
    .Y(_140_)
  );
  NOR _340_ (
    .A(_140_),
    .B(_127_),
    .Y(_115_)
  );
  NOR _341_ (
    .A(_193_),
    .B(_189_),
    .Y(_141_)
  );
  NOR _342_ (
    .A(_141_),
    .B(_212_),
    .Y(_142_)
  );
  NOR _343_ (
    .A(_142_),
    .B(_209_),
    .Y(_116_)
  );
  NOR _344_ (
    .A(_119_),
    .B(_203_),
    .Y(_144_)
  );
  NOR _345_ (
    .A(_144_),
    .B(_193_),
    .Y(_145_)
  );
  NOR _346_ (
    .A(_145_),
    .B(_209_),
    .Y(_117_)
  );
  NOR _347_ (
    .A(_114_),
    .B(_169_),
    .Y(_122_)
  );
  DFF _348_ (
    .C(clk),
    .D(ns_comb[9]),
    .Q(ps_comb[9])
  );
  DFF _349_ (
    .C(clk),
    .D(ns_comb[8]),
    .Q(ps_comb[8])
  );
  DFF _350_ (
    .C(clk),
    .D(ns_comb[7]),
    .Q(ps_comb[7])
  );
  DFF _351_ (
    .C(clk),
    .D(ns_comb[6]),
    .Q(ps_comb[6])
  );
  DFF _352_ (
    .C(clk),
    .D(ns_comb[5]),
    .Q(ps_comb[5])
  );
  DFF _353_ (
    .C(clk),
    .D(ns_comb[4]),
    .Q(ps_comb[4])
  );
  DFF _354_ (
    .C(clk),
    .D(ns_comb[3]),
    .Q(ps_comb[3])
  );
  DFF _355_ (
    .C(clk),
    .D(d[0]),
    .Q(ps_comb_2[2])
  );
  DFF _356_ (
    .C(clk),
    .D(d[1]),
    .Q(ps_comb_2[1])
  );
  (* src = "MSSD.v:34" *)
  always @(posedge clk or posedge reset)
    if (reset)
      ps[0] <= 0;
    else
      ps[0] <= ns[0];
  (* src = "MSSD.v:34" *)
  always @(posedge clk or posedge reset)
    if (reset)
      ps[1] <= 0;
    else
      ps[1] <= ns[1];
  (* src = "MSSD.v:34" *)
  always @(posedge clk or posedge reset)
    if (reset)
      ps[2] <= 0;
    else
      ps[2] <= ns[2];
  (* src = "MSSD.v:34" *)
  always @(posedge clk or posedge reset)
    if (reset)
      ps[3] <= 0;
    else
      ps[3] <= ns[3];
  assign S1 = { outvalid, outvalid, outvalid, outvalid };
  assign ci = outvalid;
  assign ns_comb_2 = d;
  assign on = outvalid;
  assign _094_ = ps[0];
  assign _152_ = ps[3];
  assign _162_ = ps[2];
  assign _192_ = serIn;
  assign _204_ = ps_comb_2[2];
  assign d[0] = _217_;
  assign _105_ = ps[1];
  assign _134_ = ps_comb_2[1];
  assign d[1] = _143_;
  assign outvalid = _146_;
  assign error = _147_;
  assign _148_ = ps_comb[3];
  assign _149_ = ps_comb[8];
  assign _150_ = ps_comb[9];
  assign _151_ = ps_comb[6];
  assign _153_ = ps_comb[7];
  assign _155_ = ps_comb[4];
  assign _157_ = ps_comb[5];
  assign ns_comb[3] = _167_;
  assign ns_comb[4] = _177_;
  assign ns_comb[5] = _185_;
  assign ns_comb[6] = _196_;
  assign p0 = _205_;
  assign p2 = _208_;
  assign p1 = _210_;
  assign ns[0] = _224_;
  assign ns[1] = _096_;
  assign ns[2] = _100_;
  assign ns[3] = _115_;
  assign ns_comb[7] = _116_;
  assign ns_comb[8] = _117_;
  assign ns_comb[9] = _119_;
  assign p3 = _122_;
endmodule
